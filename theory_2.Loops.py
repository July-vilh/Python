#ЦИКЛЫ В ПИТОНЕ: While, for + тернарные 
#Циклы в питоне работают на основе true/false. Если true цикл продолжется. Если ложь, то цикл прекращает свою работу.

#1. WHILE (ПОКА/ ДЕЛАЙ ПОКА)
a = 5
n = 0

#Что бы этот цикл выполнялся то что написано до : (в скобках), должно возвращать true! (любое сравнение/какая-то НЕПУСТАЯ строка/ NOT NONE)
#while (_________):
  
while a < 10:
  print(a)
  
# Тут 5 будет писаться бесконечное кол-во раз, потому что здесь будет всегда ИСТИНА

while a < 10:
  print(n, ' == ', a)
  n+=1

# Тут с помощью n можно увидеть сколько раз успевает пройти цикл бесконечности a
#n+=1 это присвоение (т.е. каждый раз к 0 будет прибавляться 1 и затем присваиваться n). 2 операции в 1 строку: Прибавили значение и в переменную присвоили, чтобы эта переменная
#дальше по программе несла свое новое обновленное значение!

while a < 10:
  print(n, ' == ', a)
  a+=1
  n+=1

#Тут при добавлении присвоения к а проискодит увеличение а на 1 и как результат цикл теперь будет не бесконечный а пока а < 10 (т.е. выполняется условие) т.е. до 9.

# Результат: 0  ==  5
#            1  ==  6
#            2  ==  7
#            3  ==  8
#            4  ==  9

while a < 10:
  print(n, ' == ', a)
  a+=1
  n+=1
else:
  print(f'------- a == {a}')
 
# Когда закончится цикл и a перестанет быть меньше 10 тогда 
# тут в кавычках пишет что-нибудь, а в фигурных скобках можно вставить переменную, которая будет нести в себе значение {a}. Аналог записи: ('a ==', a)
# РЕЗУЛЬТАТ:

# 0  ==  5
# 1  ==  6
# 2  ==  7
# 3  ==  8
# 4  ==  9
# ------- a == 10 (СЛЕДУЮЩЕЕ 1 ЗНАЧЕНИЕ ИНАЧЕ Т.Е. 9+1 = 10)

while a <= 10:
  print(n, ' == ', a)
  a+=1
  n+=1
else:
  print(f'------- a == {a}')
  
# Тут также как и в предыдущем варианте, но результат будет до 10, а переменная а будет равна 11 (т.к. 10 + 1 = 11)
# РЕЗУЛЬТАТ:

# 0  ==  5
# 1  ==  6
# 2  ==  7
# 3  ==  8
# 4  ==  9
# 5  ==  10
# ------- a == 11
